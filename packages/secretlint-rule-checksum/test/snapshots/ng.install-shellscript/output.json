{
    "filePath": "[SNAPSHOT]/ng.install-shellscript/input.sh",
    "messages": [
        {
            "message": "found unverified binary: kustomize",
            "range": [
                496,
                525
            ],
            "type": "message",
            "ruleId": "@pkgdeps/secretlint-rule-checksum",
            "loc": {
                "start": {
                    "line": 16,
                    "column": 0
                },
                "end": {
                    "line": 16,
                    "column": 29
                }
            },
            "severity": "error",
            "messageId": "FOUND_UNVERIFIED_BINARY",
            "docsUrl": "https://github.com/pkgdeps/unverified-checksum-checker/blob/master/packages/secretlint-rule-checksum/README.md#FOUND_UNVERIFIED_BINARY",
            "data": {
                "binary": "kustomize"
            }
        },
        {
            "message": "found unverified binary: kubectl",
            "range": [
                678,
                705
            ],
            "type": "message",
            "ruleId": "@pkgdeps/secretlint-rule-checksum",
            "loc": {
                "start": {
                    "line": 20,
                    "column": 0
                },
                "end": {
                    "line": 20,
                    "column": 27
                }
            },
            "severity": "error",
            "messageId": "FOUND_UNVERIFIED_BINARY",
            "docsUrl": "https://github.com/pkgdeps/unverified-checksum-checker/blob/master/packages/secretlint-rule-checksum/README.md#FOUND_UNVERIFIED_BINARY",
            "data": {
                "binary": "kubectl"
            }
        },
        {
            "message": "found unverified binary: conftest",
            "range": [
                973,
                1001
            ],
            "type": "message",
            "ruleId": "@pkgdeps/secretlint-rule-checksum",
            "loc": {
                "start": {
                    "line": 26,
                    "column": 0
                },
                "end": {
                    "line": 26,
                    "column": 28
                }
            },
            "severity": "error",
            "messageId": "FOUND_UNVERIFIED_BINARY",
            "docsUrl": "https://github.com/pkgdeps/unverified-checksum-checker/blob/master/packages/secretlint-rule-checksum/README.md#FOUND_UNVERIFIED_BINARY",
            "data": {
                "binary": "conftest"
            }
        },
        {
            "message": "found unverified binary: kubectl",
            "range": [
                1202,
                1234
            ],
            "type": "message",
            "ruleId": "@pkgdeps/secretlint-rule-checksum",
            "loc": {
                "start": {
                    "line": 28,
                    "column": 199
                },
                "end": {
                    "line": 28,
                    "column": 231
                }
            },
            "severity": "error",
            "messageId": "FOUND_UNVERIFIED_BINARY",
            "docsUrl": "https://github.com/pkgdeps/unverified-checksum-checker/blob/master/packages/secretlint-rule-checksum/README.md#FOUND_UNVERIFIED_BINARY",
            "data": {
                "binary": "kubectl"
            }
        },
        {
            "message": "found unverified binary: jq",
            "range": [
                1372,
                1399
            ],
            "type": "message",
            "ruleId": "@pkgdeps/secretlint-rule-checksum",
            "loc": {
                "start": {
                    "line": 32,
                    "column": 0
                },
                "end": {
                    "line": 32,
                    "column": 27
                }
            },
            "severity": "error",
            "messageId": "FOUND_UNVERIFIED_BINARY",
            "docsUrl": "https://github.com/pkgdeps/unverified-checksum-checker/blob/master/packages/secretlint-rule-checksum/README.md#FOUND_UNVERIFIED_BINARY",
            "data": {
                "binary": "jq"
            }
        }
    ]
}